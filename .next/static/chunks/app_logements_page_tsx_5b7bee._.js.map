{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/kiba/Desktop/projet-tw/app/logements/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useRef } from 'react';\nimport { FaHeart, FaRegHeart, FaSort, FaSortUp, FaSortDown, FaSearch, FaMapMarkerAlt } from 'react-icons/fa';\nimport dynamic from 'next/dynamic';\n\n// Import dynamique pour éviter les problèmes de rendu côté serveur\nconst MapWithNoSSR = dynamic<React.ComponentProps<typeof import('../components/MapComponent').default>>(\n  () => import('../components/MapComponent').then(mod => mod.default),\n  { \n    ssr: false,\n    loading: () => <div className=\"h-[500px] flex items-center justify-center bg-gray-100 rounded-lg\">Chargement de la carte...</div>\n  }\n);\n\ninterface Logement {\n  id: string;\n  title: string;\n  location: string;\n  price: number;\n  surface: number;\n  rooms: number;\n  image: string;\n  isFavorite: boolean;\n  coordinates: {\n    lat: number;\n    lng: number;\n  };\n}\n\ntype SortField = 'title' | 'location' | 'price' | 'surface' | 'rooms';\ntype SortDirection = 'asc' | 'desc';\n\nexport default function LogementsList() {\n  // État pour les logements\n  const [logements, setLogements] = useState<Logement[]>([]);\n  const [filteredLogements, setFilteredLogements] = useState<Logement[]>([]);\n  \n  // États pour le tri et la recherche\n  const [sortField, setSortField] = useState<SortField>('title');\n  const [sortDirection, setSortDirection] = useState<SortDirection>('asc');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedLogement, setSelectedLogement] = useState<string | null>(null);\n  const [mapView, setMapView] = useState(false);\n  const mapRef = useRef<any>(null);\n\n  // Charger les données des logements (à remplacer par un appel API réel)\n  useEffect(() => {\n    // Données de démonstration\n    const demoLogements: Logement[] = [\n      {\n        id: '1',\n        title: 'Appartement moderne',\n        location: 'Paris',\n        price: 250000,\n        surface: 75,\n        rooms: 3,\n        image: 'https://images.unsplash.com/photo-1560448204-e02f11c3d0e2?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n        isFavorite: false,\n        coordinates: { lat: 48.8566, lng: 2.3522 }\n      },\n      {\n        id: '2',\n        title: 'Maison de campagne',\n        location: 'Bordeaux',\n        price: 350000,\n        surface: 120,\n        rooms: 4,\n        image: 'https://images.unsplash.com/photo-1512917774080-9991f1c4c750?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n        isFavorite: false,\n        coordinates: { lat: 44.8378, lng: -0.5792 }\n      },\n      {\n        id: '3',\n        title: 'Studio étudiant',\n        location: 'Lyon',\n        price: 150000,\n        surface: 25,\n        rooms: 1,\n        image: 'https://images.unsplash.com/photo-1484154216785-4e0b5f8b9b5d?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n        isFavorite: false,\n        coordinates: { lat: 45.7640, lng: 4.8357 }\n      },\n    ];\n\n    setLogements(demoLogements);\n    setFilteredLogements(demoLogements);\n  }, []);\n\n  // Gérer le tri des logements\n  useEffect(() => {\n    const sorted = [...logements].sort((a, b) => {\n      if (a[sortField] < b[sortField]) {\n        return sortDirection === 'asc' ? -1 : 1;\n      }\n      if (a[sortField] > b[sortField]) {\n        return sortDirection === 'asc' ? 1 : -1;\n      }\n      return 0;\n    });\n    \n    const filtered = sorted.filter(logement => \n      logement.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      logement.location.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    \n    setFilteredLogements(filtered);\n  }, [sortField, sortDirection, searchTerm, logements]);\n\n  // Gérer le changement de champ de tri\n  const handleSort = (field: SortField) => {\n    if (field === sortField) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  // Gérer l'ajout/retrait des favoris\n  const toggleFavorite = (id: string) => {\n    const updatedLogements = logements.map(logement => \n      logement.id === id \n        ? { ...logement, isFavorite: !logement.isFavorite } \n        : logement\n    );\n    setLogements(updatedLogements);\n    \n    // Ici, vous pourriez aussi appeler une API pour mettre à jour les favoris en base de données\n  };\n\n  // Rendu de l'icône de tri\n  const renderSortIcon = (field: SortField) => {\n    if (sortField !== field) return <FaSort className=\"ml-1\" />;\n    return sortDirection === 'asc' \n      ? <FaSortUp className=\"ml-1\" /> \n      : <FaSortDown className=\"ml-1\" />;\n  };\n\n  // Centrer la carte sur un logement spécifique\n  const handleLogementClick = (logementId: string) => {\n    setSelectedLogement(logementId);\n    const logement = logements.find(l => l.id === logementId);\n    if (logement && mapRef.current) {\n      mapRef.current.flyTo(\n        [logement.coordinates.lat, logement.coordinates.lng],\n        13, // Niveau de zoom\n        {\n          duration: 1.5,\n          animate: true\n        }\n      );\n    }\n  };\n\n  // Calculer le centre de la carte en fonction des logements visibles\n  const getMapCenter = () => {\n    if (selectedLogement) {\n      const logement = logements.find(l => l.id === selectedLogement);\n      if (logement) return logement.coordinates;\n    }\n    \n    // Si pas de logement sélectionné, calculer le centre des logements visibles\n    if (filteredLogements.length > 0) {\n      const lats = filteredLogements.map(l => l.coordinates.lat);\n      const lngs = filteredLogements.map(l => l.coordinates.lng);\n      return {\n        lat: (Math.max(...lats) + Math.min(...lats)) / 2,\n        lng: (Math.max(...lngs) + Math.min(...lngs)) / 2\n      };\n    }\n    \n    // Par défaut, centrer sur la France\n    return { lat: 46.603354, lng: 1.888334 };\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">Nos logements</h1>\n        <button\n          onClick={() => setMapView(!mapView)}\n          className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n        >\n          <FaMapMarkerAlt className=\"mr-2\" />\n          {mapView ? 'Vue liste' : 'Vue carte'}\n        </button>\n      </div>\n      \n      {/* Barre de recherche */}\n      <div className=\"mb-6 relative\">\n        <div className=\"relative\">\n          <FaSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n          <input\n            type=\"text\"\n            placeholder=\"Rechercher un logement ou une ville...\"\n            className=\"w-full pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {/* Carte interactive */}\n      {mapView && (\n        <div className=\"mb-8 h-[500px] rounded-lg overflow-hidden shadow-lg\">\n          <MapWithNoSSR\n            logements={filteredLogements}\n            center={getMapCenter()}\n            selectedLogement={selectedLogement}\n            onMarkerClick={handleLogementClick}\n            ref={mapRef}\n          />\n        </div>\n      )}\n      \n      {/* En-tête de tableau avec options de tri */}\n      <div className=\"mb-6 overflow-x-auto\">\n        <div className=\"flex items-center bg-gray-100 p-4 rounded-t-lg\">\n          <div \n            className=\"w-3/12 font-medium flex items-center cursor-pointer\"\n            onClick={() => handleSort('title')}\n          >\n            Titre {renderSortIcon('title')}\n          </div>\n          <div \n            className=\"w-2/12 font-medium flex items-center cursor-pointer\"\n            onClick={() => handleSort('location')}\n          >\n            Localisation {renderSortIcon('location')}\n          </div>\n          <div \n            className=\"w-2/12 font-medium flex items-center cursor-pointer\"\n            onClick={() => handleSort('price')}\n          >\n            Prix {renderSortIcon('price')}\n          </div>\n          <div \n            className=\"w-2/12 font-medium flex items-center cursor-pointer\"\n            onClick={() => handleSort('surface')}\n          >\n            Surface {renderSortIcon('surface')}\n          </div>\n          <div \n            className=\"w-2/12 font-medium flex items-center cursor-pointer\"\n            onClick={() => handleSort('rooms')}\n          >\n            Pièces {renderSortIcon('rooms')}\n          </div>\n          <div className=\"w-1/12 font-medium\">Actions</div>\n        </div>\n        \n        {/* Liste des logements */}\n        <div className=\"bg-white rounded-b-lg overflow-hidden\">\n          {filteredLogements.length > 0 ? (\n            filteredLogements.map((logement) => (\n              <div \n                key={logement.id} \n                className={`flex items-center p-4 border-b hover:bg-gray-50 transition-colors cursor-pointer ${selectedLogement === logement.id ? 'bg-blue-50' : ''}`}\n                onClick={() => handleLogementClick(logement.id)}\n              >\n                <div className=\"w-3/12\">\n                  <div className=\"flex items-center\">\n                    <img \n                      src={logement.image} \n                      alt={logement.title} \n                      className=\"w-16 h-16 object-cover rounded mr-4\"\n                    />\n                    <span className=\"font-medium\">{logement.title}</span>\n                  </div>\n                </div>\n                <div className=\"w-2/12\">{logement.location}</div>\n                <div className=\"w-2/12\">{logement.price.toLocaleString()} €</div>\n                <div className=\"w-2/12\">{logement.surface} m²</div>\n                <div className=\"w-2/12\">{logement.rooms} pièce{logement.rooms > 1 ? 's' : ''}</div>\n                <div className=\"w-1/12\">\n                  <button \n                    onClick={() => toggleFavorite(logement.id)}\n                    className=\"text-2xl focus:outline-none\"\n                    aria-label={logement.isFavorite ? 'Retirer des favoris' : 'Ajouter aux favoris'}\n                  >\n                    {logement.isFavorite ? (\n                      <FaHeart className=\"text-red-500\" />\n                    ) : (\n                      <FaRegHeart className=\"text-gray-400 hover:text-red-500\" />\n                    )}\n                  </button>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"p-8 text-center text-gray-500\">\n              Aucun logement ne correspond à votre recherche.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n  "],"names":[],"mappings":"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"}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}